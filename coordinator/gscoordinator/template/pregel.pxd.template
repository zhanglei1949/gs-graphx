# distutils: language=c++
# distutils: extra_compile_args = ["-std=c++14", "-g", "-D __STDC_FORMAT_MACROS", "-fPIC", "-O3"]

from libc.stdint cimport int32_t
from libc.stdint cimport uint32_t
from libc.stdint cimport int64_t
from libc.stdint cimport uint64_t

from libcpp cimport bool
from libcpp.pair cimport pair
from libcpp.string cimport string
from libcpp.vector cimport vector

cdef extern from "<string>" namespace "std":
    cdef string to_string(int32_t)
    cdef string to_string(uint32_t)
    cdef string to_string(int64_t)
    cdef string to_string(uint64_t)
    cdef string to_string(float)
    cdef string to_string(double)

cdef extern from "core/app/pregel/export.h" namespace "pregel":
    cdef cppclass Vertex[VD_TYPE, MD_TYPE]:
        Vertex()
        string id()
        string label()
        int label_id()
        vector[pair[string, string]] properties()
        const VD_TYPE& value()
        void set_value(const VD_TYPE&)
        string get_str(int)
        string get_str(const string&)
        double get_double(int)
        double get_double(const string&)
        int64_t get_int(int)
        int64_t get_int(const string&)
        AdjList[VD_TYPE, MD_TYPE] outgoing_edges(int)
        AdjList[VD_TYPE, MD_TYPE] outgoing_edges(const string&)
        AdjList[VD_TYPE, MD_TYPE] incoming_edges(int)
        AdjList[VD_TYPE, MD_TYPE] incoming_edges(const string&)
        void send(const Vertex[VD_TYPE, MD_TYPE]&, const MD_TYPE&)
        void vote_to_halt()

    cdef cppclass Neighbor[VD_TYPE, MD_TYPE]:
        Neighbor()
        Vertex[VD_TYPE, MD_TYPE] vertex()
        string get_str(int)
        double get_double(int)
        int64_t get_int(int)

    cdef cppclass AdjList[VD_TYPE, MD_TYPE]:
        AdjList()
        cppclass iterator:
            Neighbor[VD_TYPE, MD_TYPE]& operator*()
            iterator& operator++()
            bool operator==(const iterator&)
            bool operator!=(const iterator&)
        iterator begin()
        iterator end()
        size_t size()

    cdef cppclass Context[VD_TYPE, MD_TYPE]:
        Context()
        string get_config(const string&)
        void register_aggregator(const string&, PregelAggregatorType)
        void aggregate[AGGR_TYPE](const string&, AGGR_TYPE)
        AGGR_TYPE get_aggregated_value[AGGR_TYPE](const string&)
        int superstep()
        size_t get_total_vertices_num()
        int vertex_label_num()
        int edge_label_num()
        int vertex_property_num(int)
        int vertex_property_num(const string&)
        int edge_property_num(int)
        int edge_property_num(const string&)
        vector[string] vertex_labels()
        vector[string] edge_labels()
        string get_vertex_label_by_id(int)
        int get_vertex_label_id_by_name(const string&)
        string get_edge_label_by_id(int)
        int get_edge_label_id_by_name(const string&)
        vector[pair[string, string]] vertex_properties(int)
        vector[pair[string, string]] vertex_properties(const string&)
        vector[pair[string, string]] edge_properties(int)
        vector[pair[string, string]] edge_properties(const string&)
        int get_vertex_property_id_by_name(const string&, const string&)
        int get_vertex_property_id_by_name(int, const string&)
        string get_vertex_property_by_id(const string&, int)
        string get_vertex_property_by_id(int, int)
        int get_edge_property_id_by_name(const string&, const string&)
        int get_edge_property_id_by_name(int, const string&)
        string get_edge_property_by_id(const string&, int)
        string get_edge_property_by_id(int, int)
        
    cdef cppclass MessageIterator[MD_TYPE]:
        MessageIterator()
        MD_TYPE* begin()
        MD_TYPE* end()
        MessageIterator[MD_TYPE]& operator=(const MessageIterator[MD_TYPE]&)
        bool empty()

    cdef enum class PregelAggregatorType:
        kBoolAndAggregator = 0,
        kBoolOrAggregator
        kBoolOverwriteAggregator
        kDoubleMinAggregator
        kDoubleMaxAggregator
        kDoubleSumAggregator
        kDoubleProductAggregator
        kDoubleOverwriteAggregator
        kInt64MinAggregator
        kInt64MaxAggregator
        kInt64SumAggregator
        kInt64ProductAggregator
        kInt64OverwriteAggregator
        kTextAppendAggregator
        kEmptyAggregator
